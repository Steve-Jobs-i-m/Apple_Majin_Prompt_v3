---
name: Markdown Checkbox Tracker

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  schedule:
    # 毎日 09:00 JST (00:00 UTC) に実行
    - cron: '0 0 * * *'
  workflow_dispatch:

jobs:
  track-checkboxes:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Run checkbox tracker
        run: |
          node .github/scripts/checkbox-tracker.js

      - name: Generate dashboard
        run: |
          node .github/scripts/generate-dashboard.js checkbox-report.json

      - name: Upload results
        uses: actions/upload-artifact@v4
        with:
          name: checkbox-report
          path: |
            checkbox-report.json
            dashboard.html

      - name: Comment PR (if PR)
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');

            try {
              const report = JSON.parse(
                fs.readFileSync('checkbox-report.json', 'utf8')
              );

              const comment = `## 📋 チェックボックス進捗レポート

            ### 全体の進捗
            - **総タスク数**: ${report.summary.total}
            - **完了済み**: ${report.summary.completed} (${report.summary.completionRate}%)
            - **未完了**: ${report.summary.pending}

            ### ファイル別詳細
            ${report.files.map(file => `
            **${file.path}**
            - 完了: ${file.completed}/${file.total} (${file.completionRate}%)
            ${file.checkboxes.length > 0 ? file.checkboxes.map(cb => `  - ${cb.checked ? '✅' : '❌'} L${cb.line}: ${cb.text.substring(0, 50)}${cb.text.length > 50 ? '...' : ''}`).join('\n') : '  - チェックボックスなし'}
            `).join('\n')}

            *このレポートは自動生成されました*`;

              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: comment
              });
            } catch (error) {
              console.log('レポートファイルが見つからないか、コメントの作成に失敗しました:', error.message);
            }